// <auto-generated />
using CommunityResources.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace CommunityResources.Migrations
{
    [DbContext(typeof(CommunityResourcesContext))]
    partial class CommunityResourcesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("CommunityResources.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<int>("OrganizationId");

                    b.Property<string>("Phone");

                    b.Property<string>("Street_Address");

                    b.Property<string>("Website");

                    b.Property<int>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId")
                        .IsUnique();

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("CommunityResources.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Additional_Comments");

                    b.Property<int>("Appointments_Available");

                    b.Property<int>("Appointments_Required");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Other_Requirements");

                    b.Property<string>("Other_Requirements_Text");

                    b.Property<int>("Photo_ID");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("CommunityResources.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Clothing");

                    b.Property<int>("Education");

                    b.Property<int>("Employment");

                    b.Property<int>("Finances");

                    b.Property<int>("Food");

                    b.Property<int>("Housing");

                    b.Property<int>("Medical_Prescription");

                    b.Property<int>("Natural_Disaster");

                    b.Property<int>("OrganizationId");

                    b.Property<int>("Other_Resources");

                    b.Property<string>("Other_Resources_Text");

                    b.Property<int>("Rent_Utilities");

                    b.Property<int>("Senior");

                    b.Property<int>("Veterans");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId")
                        .IsUnique();

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("CommunityResources.Models.Time", b =>
                {
                    b.Property<int>("TimesId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Day");

                    b.Property<int>("OrganizationId");

                    b.Property<int>("Repeat");

                    b.Property<string>("Time_End");

                    b.Property<string>("Time_Start");

                    b.HasKey("TimesId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Time");
                });

            modelBuilder.Entity("CommunityResources.Models.Contact", b =>
                {
                    b.HasOne("CommunityResources.Models.Organization", "Organization")
                        .WithOne("Contacts")
                        .HasForeignKey("CommunityResources.Models.Contact", "OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CommunityResources.Models.Resource", b =>
                {
                    b.HasOne("CommunityResources.Models.Organization", "Organization")
                        .WithOne("Resources")
                        .HasForeignKey("CommunityResources.Models.Resource", "OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CommunityResources.Models.Time", b =>
                {
                    b.HasOne("CommunityResources.Models.Organization", "Organization")
                        .WithMany("Times")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
